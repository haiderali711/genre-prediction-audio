# Which Docker image shall be used on the GitLab runner?
image: docker:latest

# Details about how to connect to the Docker service to run this build.
variables:
  # DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: ""

services:
  - name: docker:19.03.0-dind

stages:
  - test-build
  - build
  - deploy
  # - test

# This section describes what shall be done to build and test the project.
build-feature-branch:
  # Display information before we start the build.
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  rules:
    - if: $CI_COMMIT_TAG == null
  tags:
    - docker-build
  stage: test-build
  script:
    - cd genre_classification
    - docker build --pull --no-cache .

# This section describes what shall be done to deploy artefacts from the project.
build-to-registry:
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  tags:
    - docker-build
  stage: build
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v\d[.]\d[.]\d$/
  script:
    - cd genre_classification
    - docker build --pull --no-cache -t "$CI_REGISTRY_IMAGE":${CI_COMMIT_REF_NAME} .
    - docker push "$CI_REGISTRY_IMAGE":${CI_COMMIT_REF_NAME}

release:
  image: thisiskj/kubectl-envsubst
  stage: deploy
  environment:
    name: default
  tags:
    - kubernetes
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v\d[.]\d[.]\d$/
  script:
    - envsubst \$CI_COMMIT_TAG < docker-deployment.yaml > deployment.yaml
    - kubectl apply -f deployment.yaml

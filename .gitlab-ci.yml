# Which Docker image shall be used on the GitLab runner?
image: docker:latest

# Details about how to connect to the Docker service to run this build.
variables:
  # DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: ""

services:
  - name: docker:19.03.0-dind

stages:
  - build
  - deploy
  # - test

# This section describes what shall be done to build and test the project.
build-and-test:
  # Display information before we start the build.
  before_script:
    - docker info
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}

  tags:
    - kubernetes
  stage: build
  except:
    - master
  script:
    - cd genre_classification
    - docker build --pull --no-cache .

# This section describes what shall be done to deploy artefacts from the project.
push-to-registry:
  before_script:
    - docker info
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  tags:
    - kubernetes
  stage: deploy
  only:
    - master
  script:
    - cd genre_classification
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME} .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}
    # - docker build -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_SHA" .
    # - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_SHA"

deploy:
  image: registry.git.chalmers.se/courses/dit824/2021/group01/genre-recognition/kubectl-envsubst
  stage: deploy
  environment:
    name: default
  only:
    - master
  script:
    - envsubst \$CI_COMMIT_TAG  deployment.yaml
    - kubectl apply -f deployment.yaml
